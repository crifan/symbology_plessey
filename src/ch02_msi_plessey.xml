<?xml version='1.0' encoding="utf-8"?>

<!DOCTYPE chapter
[

<!ENTITY % crl_ent PUBLIC "crl.ent" 'http://www.crifan.com/files/res/docbook/entity/crl.ent'>
%crl_ent;

]>

<chapter xmlns="http://docbook.org/ns/docbook"
    xml:id="ch02_msi_plessey"
    xmlns:xi="http://www.w3.org/2001/XInclude">

<title>MSI Plessey</title>
<abstract></abstract>

<sect1><title>What is MSI Plessey</title>
    <para>MSI Plessey is a barcode symbology, is a variation of Plessey,  is the most widely supported variation of Plessey.</para>
    <para>Also called “Modified Plessey”, or MSI.</para>
    <para>So:</para>
    <para><emphasis>MSI = MSI Plessey = Modified Plessey</emphasis></para>
    <para>Following description will use <emphasis>MSI</emphasis>.</para>
    <para>MSI was developed by the MSI Data Corporation, based on the original Plessey Code, Currently maintained by Symbol Technologies, Inc.</para>
    <para>While the length of an MSI bar code can be of any length, a given application usually implements a fixed-length code</para>
</sect1>

<sect1><title>Characteristics</title>
    <para>MSI is a continuous symbology that is not self-checking, based on Pulse-Width Modulation</para>
    
    <sect2><title>Character set</title>
        <para>The MSI character set consist of the numbers 0..9 as well as two "guard" characters (representing the beginning and end of the barcode).</para>
        <para>So, like Interleaved 2-of-5 and UPC, MSI is an all-numeric language, not support alphabetic characters.</para>
    </sect2>
    
    <sect2><title>Coding Rule</title>
        <para>The <emphasis>bit representation</emphasis> is same with Plessey:</para>
        <itemizedlist>
            <listitem>Wide bar following by narrow space is a "1" bit. </listitem>
            <listitem>Narrow bar followed by wide space is a "0" bit. </listitem>
        </itemizedlist>
        <para>But the digit representation is more simple:</para>
        <para>Each digit number is represented by four bit.</para>
        <para>Except the start and stop bits, If you only calculate the bar (horizontal black line), the wide bar means ‘1’ and the narrow bar means ‘0’, </para>
        <para>then it is the same rule as using binary to represent the digit:</para>
        <para>Digit 0 = 0000b</para>
        <para>Digit 1 = 0001b</para>
        <para>Digit 2 = 0010b</para>
        <para>Digit 3 = 0011b</para>
        <para>...</para>
    </sect2>
</sect1>

<sect1><title>MSI Barcode Example</title>
    <figure id="fg.msi_barcode_01234567"><title>MSI exapmle 01234567 mode 10</title>
        <mediaobject>
            <imageobject role="html">
                <imagedata fileref="images/msi_barcode_01234567.jpg" align="left" scalefit="0" width="100%" />
            </imageobject>
            <imageobject role="fo">
                <imagedata fileref="images/msi_barcode_01234567.jpg" align="center" scalefit="1" width="100%" />
            </imageobject>
        </mediaobject>
    </figure>
</sect1>

<sect1><title>MSI Barcode Format</title>
    <table id="tbl.msi_barcode_format"><title>MSI Barcode Format</title>
        <tgroup cols="5">
            <colspec colnum="1" colname="col1" colwidth="1*" />
            <colspec colnum="2" colname="col2" colwidth="1*" />
            <colspec colnum="3" colname="col3" colwidth="1*" />
            <colspec colnum="4" colname="col4" colwidth="2*" />
            <colspec colnum="5" colname="col5" colwidth="1*" />
            
            <thead>
                <row><entry>Format</entry><entry>start character</entry><entry>Any number of digits</entry><entry>Checksum digit(s)</entry><entry>A stop character</entry></row>
            </thead>
            
            <tbody>
                <row><entry>Explanation</entry><entry>a wide bar followed by a narrow space</entry><entry>Digits</entry>
                    <entry>5 modes:
                    <itemizedlist>
                        <listitem>No check digit (least common) </listitem>
                        <listitem>Mod 10 (most common) </listitem>
                        <listitem>Mod 11 </listitem>
                        <listitem>Mod 1010 </listitem>
                        <listitem>Mod 1110</listitem>
                    </itemizedlist></entry>
                    <entry>narrow bar, a wide space, then a narrow bar</entry>
                </row>
                <row><entry>Digits/Bits</entry><entry>Bit: <emphasis>1</emphasis></entry><entry>Digits: <emphasis>XXX...</emphasis></entry><entry>Digit(s): <emphasis>X/XX</emphasis></entry><entry>Bits: <emphasis>00</emphasis></entry></row>
            </tbody>
        </tgroup>
    </table>

    <sect2><title>Checksum digit(s)</title>
        <para>The MSI barcode uses one of five possible schemes for calculating a check digit:</para>
        <itemizedlist>
            <listitem>No check digit (least common) </listitem>
            <listitem><emphasis>Mod 10</emphasis> (most common) </listitem>
            <listitem>Mod 11 </listitem>
            <listitem>Mod 1010 </listitem>
            <listitem>Mod 1110</listitem>
        </itemizedlist>
        
        <sect3><title>Mode 10 and Mode 1010</title>
            <para>The checksum algorithm for Mode 10 is to use “Luhn algorithm”:</para>
            <orderedlist>
                <listitem>Counting from the check digit, which is the rightmost one, and moving left, double (x 2) the value of every second digit. </listitem>
                <listitem>Sum the digits of the products (eg, 10 &rArr; 1+0 = 1, 14 &rArr; 1+ 4 =5) together with the un-doubled digits from the original number</listitem>
                <listitem>Got the sum, then do: sum Mod 10 = check digit</listitem>
            </orderedlist>
            <para>Assume an example of an account number "1234567" that will have a check digit added, making it of the form “1234567<emphasis>X</emphasis>”:</para>
            <para>Then the steps to calculate the X are:</para>
            <table id="tbl.mode10_cd_example"><title>Mode 10 Check Digit Example</title>
                <tgroup cols="9">
                    <colspec colnum="1" colname="col1" colwidth="3*" />
                    <colspec colnum="2" colname="col2" colwidth="1*" />
                    <colspec colnum="3" colname="col3" colwidth="1*" />
                    <colspec colnum="4" colname="col4" colwidth="1*" />
                    <colspec colnum="5" colname="col5" colwidth="1*" />
                    <colspec colnum="6" colname="col6" colwidth="1*" />
                    <colspec colnum="7" colname="col7" colwidth="1*" />
                    <colspec colnum="8" colname="col8" colwidth="1*" />
                    <colspec colnum="9" colname="col9" colwidth="2*" />
                    
                    <thead>
                        <row><entry>Example</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry>Mode 10 Check digit </entry></row>
                    </thead>
                    
                    <tbody>
                        <row><entry>(1) Append X</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry><emphasis>
                        X</emphasis></entry></row>
                        <row><entry>(2) From rightmost, every second digit × <emphasis>2</emphasis></entry><entry>2</entry><entry></entry><entry>6</entry><entry></entry><entry>10</entry><entry></entry><entry>14</entry><entry></entry></row>
                        <row><entry>(3) List all</entry><entry>2</entry><entry>2</entry><entry>6</entry><entry>4</entry><entry>1+0</entry><entry>6</entry><entry>1+4</entry><entry></entry></row>
                        <row><entry>(4) Got Summary</entry><entry namest="col2" nameend="col8" align="center" >Sum=2+2+6+4+1+0+6+1+4=26, 26 Mod 10 = 4</entry><entry>X <emphasis>= 4</emphasis></entry></row>
                        <row><entry>(5)Result</entry><entry namest="col2" nameend="col9" align="center" >1234567<emphasis>4</emphasis></entry></row>
                    </tbody>
                </tgroup>
            </table>
            <para>For the second checksum digit, the calculation method is still the same, just take the “1234567<emphasis>4</emphasis>” as the input number, the calculate the <emphasis>X</emphasis> for “1234567<emphasis>4X</emphasis>”</para>
            
            <sect4><title>Mode 1010 Example</title>
                <table id="tbl.mode1010_cd_example"><title>Mode 1010 Check Digit Example</title>
                    <tgroup cols="10">
                        <colspec colnum="1" colname="col1" colwidth="3*" />
                        <colspec colnum="2" colname="col2" colwidth="1*" />
                        <colspec colnum="3" colname="col3" colwidth="1*" />
                        <colspec colnum="4" colname="col4" colwidth="1*" />
                        <colspec colnum="5" colname="col5" colwidth="1*" />
                        <colspec colnum="6" colname="col6" colwidth="1*" />
                        <colspec colnum="7" colname="col7" colwidth="1*" />
                        <colspec colnum="8" colname="col8" colwidth="1*" />
                        <colspec colnum="9" colname="col9" colwidth="1*" />
                        <colspec colnum="10" colname="col10" colwidth="2*" />
                        
                        <thead>
                            <row><entry>Example</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry><emphasis>4</emphasis></entry><entry>Mode 1010 Check digit </entry></row>
                        </thead>
                        
                        <tbody>
                            <row><entry>(1) Append X</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry>4</entry><entry><emphasis>
                            X</emphasis></entry></row>
                            <row><entry>(2) From rightmost, every second digit × <emphasis>2</emphasis></entry><entry></entry><entry>4</entry><entry></entry><entry>8</entry><entry></entry><entry>12</entry><entry></entry><entry>8</entry><entry></entry></row>
                            <row><entry>(3) List all</entry><entry>1</entry><entry>4</entry><entry>3</entry><entry>8</entry><entry>5</entry><entry>1+2</entry><entry>7</entry><entry>8</entry><entry></entry></row>
                            <row><entry>(4) Got Summary</entry><entry namest="col2" nameend="col9" align="center" >Sum=1+4+3+8+5+1+2+7+8=39, 39 Mod 10 = <emphasis>1</emphasis></entry><entry>X <emphasis>= 1</emphasis></entry></row>
                            <row><entry>(5)Result</entry><entry namest="col2" nameend="col10" align="center" >12345674<emphasis>1</emphasis></entry></row>
                        </tbody>
                    </tgroup>
                </table>
            </sect4>
        </sect3>

        <sect3><title>Mode 11</title>
            <para>To calculate the Modulo 11 check digit, use the following process:</para>
            <orderedlist>
                <listitem>Assign a weight to each character in the code, starting with a weight of 2 in the right-most position and incrementing by one as you move to the left. After you reach a weight of 7, the next digit will have a weight of 2 (that is, weighting goes from 2 to 7 and then wraps around back to 2)</listitem>
                <listitem>Multiply the value of each character by its weight, and sum the result of all the characters</listitem>
                <listitem>Perform a modulo 11 on the result (sum) of step 2</listitem>
            </orderedlist>
            <para>Assume an example of an account number "1234567" that will have a mode 11 check digit added, making it of the form “1234567X”:</para>
            <table id="tbl.mode11_cd_example"><title>Mode 11 Check Digit Example</title>
                <tgroup cols="9">
                    <colspec colnum="1" colname="col1" colwidth="3*" />
                    <colspec colnum="2" colname="col2" colwidth="1*" />
                    <colspec colnum="3" colname="col3" colwidth="1*" />
                    <colspec colnum="4" colname="col4" colwidth="1*" />
                    <colspec colnum="5" colname="col5" colwidth="1*" />
                    <colspec colnum="6" colname="col6" colwidth="1*" />
                    <colspec colnum="7" colname="col7" colwidth="1*" />
                    <colspec colnum="8" colname="col8" colwidth="1*" />
                    <colspec colnum="9" colname="col9" colwidth="2*" />
                    
                    <thead>
                        <row><entry>Example</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry>Mode 11 Check digit  </entry></row>
                    </thead>
                    
                    <tbody>
                        <row><entry>(1) Add weight</entry><entry>2</entry><entry>7</entry><entry>6</entry><entry>5</entry><entry>4</entry><entry>3</entry><entry>2</entry><entry><emphasis>
                        X</emphasis></entry></row>
                        <row><entry>(2) digit <emphasis>×</emphasis> weight</entry><entry>2</entry><entry>14</entry><entry>18</entry><entry>20</entry><entry>20</entry><entry>18</entry><entry>14</entry><entry></entry></row>
                        <row><entry>(3)add all, get sum</entry><entry namest="col2" nameend="col8" align="center" >Sum=2+14+18+20+20+18+14=106, 106 Mod 11 = 4</entry><entry>X <emphasis>= 4</emphasis></entry></row>
                        <row><entry>(4)Result</entry><entry namest="col2" nameend="col9" align="center" >1234567<emphasis>4</emphasis></entry></row>
                    </tbody>
                </tgroup>
            </table>
            <para>And for the mode 1110, take “1234567”as example, just to use the mode 11 for “1234567”to calculate the first mode 11 check digit, is 4, then do mode 10 for “12345674”then calculate out the second mode 10 check digit, is 1, so the whole result is “1234567<emphasis>41</emphasis>”</para>
            <tip>
                <para>While <emphasis>most</emphasis> MSI barcodes <emphasis>include at least one checksum digit</emphasis>, so <emphasis>in many case</emphasis>, the <emphasis>printed MSI barcode does not show out the first checksum digit</emphasis>, while only show the second checksum digit if exists.</para>
            </tip>
        </sect3>
    </sect2>
</sect1>

<sect1><title>Usage Filed</title>
    <para>MSI is used primarily for inventory control, marking storage containers and shelves in warehouse environments.</para>
    <para>MSI, and other symbologies based on Pulse-Width Modulation, offer no significant benefit over more modern symbologies. While it is not a bad idea to support MSI for legacy bar codes, most new applications do not choose MSI as their symbology of choice. </para>
</sect1>

</chapter>